/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1e-6; // Units in micrometers

vertices
(
    (0. 0. 2.)	// 0
    (0. 0. 4.)	// 1
    (0. 0.2 2.)	// 2
    (0. 0.2 4.)	// 3
    (1. 0. 0.)	// 4
    (1. 0. 2.)	// 5
    (1. 0. 4.)	// 6
    (1. 0.2 0.)	// 7
    (1. 0.2 2.)	// 8
    (1. 0.2 4.)	// 9
    (2. 0. 0.)	// 10
    (2. 0. 2.)	// 11
    (2. 0. 4.)	// 12
    (2. 0.2 0.)	// 13
    (2. 0.2 2.)	// 14
    (2. 0.2 4.)	// 15
    (3. 0. 2.)	// 16
    (3. 0. 4.)	// 17
    (3. 0.2 2.)	// 18
    (3. 0.2 4.)	// 19
);
blocks
(
    hex (0 5 8 2 1 6 9 3)  (8 1 16) simpleGrading (1 1 1)
    hex (4 10 13 7 5 11 14 8)  (8 1 16) simpleGrading (1 1 1)
    hex (5 11 14 8 6 12 15 9)  (8 1 16) simpleGrading (1 1 1)
    hex (11 16 18 14 12 17 19 15)  (8 1 16) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type        cyclic;
        neighbourPatch outlet;
        faces       ((4 7 13 10));
    }
    outlet
    {
        type        cyclic;
        neighbourPatch inlet;
        faces       ((6 12 15 9));
    }
    hotWall
    {
        type wall;
        faces
        (
            (11 14 18 16)
            (0 2 8 5)
        );
    }
    coldWall
    {
        type wall;
        faces
        (
            (1 6 9 3)
            (12 17 19 15)
        );
    }
    leftWalls
    {
        type wall;
        faces
        (
            (1 3 2 0)
            (5 8 7 4)
        );
    }
    rightWalls
    {
        type wall;
        faces
        (
            (10 13 14 11)
            (16 18 19 17)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 5 6 1)
            (2 3 9 8)
            (4 10 11 5)
            (7 8 14 13)
            (5 11 12 6)
            (8 9 15 14)
            (11 16 17 12)
            (14 15 19 18)
            
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //

